<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.onap.logging-analytics.pomba</groupId>
  <artifactId>pomba-context-aggregator</artifactId>
  <version>1.3.5-SNAPSHOT</version>

  <parent>
    <groupId>org.onap.oparent</groupId>
    <artifactId>oparent</artifactId>
    <version>1.2.1</version>
    <relativePath/>
  </parent>

  <properties>
    <java.version>1.8</java.version>
    <dmaap.client.version>1.1.5</dmaap.client.version>
    <aai.rest.client.version>1.2.1</aai.rest.client.version>
    <!--docker -->
    <docker.tag>${project.version}-${timestamp}</docker.tag>
    <docker.latest.tag>${project.version}-latest</docker.latest.tag>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>1.5.17.RELEASE</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-security</artifactId>
      <version>9.4.12.RC1</version>
    </dependency>
    <dependency>
      <groupId>org.onap.dmaap.messagerouter.dmaapclient</groupId>
      <artifactId>dmaapClient</artifactId>
      <version>${dmaap.client.version}</version>
    </dependency>
    <dependency>
       <groupId>ch.qos.logback</groupId>
       <artifactId>logback-classic</artifactId>
       <version>1.2.3</version>
    </dependency>
    <dependency>
      <groupId>org.onap.aai</groupId>
      <artifactId>rest-client</artifactId>
      <version>${aai.rest.client.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-slf4j-impl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.onap.logging-analytics.pomba</groupId>
      <artifactId>pomba-audit-common</artifactId>
      <version>1.3.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
    </dependency>
    <!-- logging dependencies -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <!-- JUnit dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>4.3.6.RELEASE</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-test</artifactId>
      <version>1.5.1.RELEASE</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.10.19</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <resources>
      <resource>
        <targetPath>config</targetPath>
        <directory>config</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*</include>
        </includes>
      </resource>
    </resources>
  </build>

  <profiles>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.19.1</version>
            <configuration>
              <verbose>true</verbose>
              <apiVersion>1.23</apiVersion>
              <images>
                <image>
                  <name>onap/${project.artifactId}</name>
                  <alias>${project.artifactId}</alias>
                  <build>
                    <cleanup>try</cleanup>
                    <dockerFileDir>${project.basedir}/target/docker-stage</dockerFileDir>
                    <tags>
                      <tag>${docker.snapshot.tag}</tag>
                      <tag>${docker.latest.tag}</tag>
                    </tags>
                  </build>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <id>generate-images</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
              <execution>
                <id>push-images</id>
                <phase>deploy</phase>
                <goals>
                  <goal>build</goal>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.6</version>
            <executions>
              <execution>
                <id>copy-dockerfile</id>
                <goals>
                  <goal>copy-resources</goal>
                </goals><!-- here the phase you need -->
                <phase>package</phase>
                <configuration>
                  <outputDirectory>${project.basedir}/target/docker-stage</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/docker</directory>
                      <includes>
                        <include>Dockerfile</include>
                      </includes>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <execution>
                <id>copy-properties</id>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <outputDirectory>${project.basedir}/target/docker-stage/config</outputDirectory>
                  <resources>
                    <resource>
                      <directory>config</directory>
                      <includes>
                        <include>*.properties</include>
                        <include>builders/*.properties</include>
                        <include>*.xml</include>
                      </includes>
                      <filtering>false</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <execution>
                <id>copy-script</id>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <outputDirectory>${project.basedir}/target/docker-stage/</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/docker</directory>
                      <includes>
                        <include>*.sh</include>
                      </includes>
                      <filtering>false</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <execution>
                <id>copy-jar</id>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <outputDirectory>${project.basedir}/target/docker-stage/</outputDirectory>
                  <resources>
                    <resource>
                      <directory>target</directory>
                      <includes>
                        <include>*.jar</include>
                      </includes>
                      <filtering>false</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
